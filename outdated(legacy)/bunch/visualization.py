# -*- coding: utf-8 -*-
"""Visualization.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vTUN4Mh7Ph5pskI6d4J04CMqQ8FJ7T9H
"""

!pip install resampy

import numpy as np
import pandas as pd
import os
import librosa
import matplotlib.pyplot as plt
import seaborn as sns
from tqdm.notebook import tqdm
import IPython
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from imblearn.over_sampling import RandomOverSampler
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, Activation,Reshape,MaxPooling2D, Dropout, Conv2D, MaxPool2D, Flatten
from tensorflow.keras.utils import to_categorical
from tensorflow.keras.callbacks import EarlyStopping

import os

paths = []
labels = []

# Define the root directory
root_dir = ''

# Iterate through the subdirectories
for subdir in os.listdir(root_dir):
    subdir_path = os.path.join(root_dir, subdir)
    # Check if it's a directory
    if os.path.isdir(subdir_path):
        # Add all files in the subdirectory
        for filename in os.listdir(subdir_path):
            file_path = os.path.join(subdir_path, filename)
            paths.append(file_path)
            # Add label based on the subdirectory name
            labels.append(subdir)

print('Dataset is loaded')

len(paths)

paths[:5]

len(labels)

df = pd.DataFrame()
df['speech'] = paths
df['lable' = labels]

df['label'].value_counts()

audio_path = ''
real_audio_path = ''
fake_audio_path= = ''

folders = os.listdir(audio_path)
print(folders)

real_audio = ''
fake_audio = ''

print('Real_audio')
Ipython.display.Audio(real_audio)

print('Fake Audio:')
Ipython.display.Audio(fake_audio)

real_ad, real_sr = librosa.load(real_audio)
plt.figure(figsize = (12,4))
plt.plot(real_ad)
plt.title('Real Audio Data')
plt.show()

real_spec = np.abs(librosa.stft(real_ad))
real_spec = librosa.amplitude_to_db(real_spec, ref = np.max)
plt.figure(figsize=(12,4))
librosa.display.specshow(real_spec, sr = real_st, x_axis = 'time' , y_axis = 'log')
plt.colorbar(format = '%+2.0f dB')
plt.title('Real Audio Spectrogram')
plt.show()

real_mel_spect = librosa.feature.melspectrogram(real_ad, sr = real_sr)
real_mel_spect = librosa.power_to_db(real_mel_spect, ref = np.max)
plt.figure(figsize = (12,4))
librosa.display.specshow(real_mel_spect, y_axis='mel', x_axis= 'time')
plt.title('Real Audio Mel Spectogram')
plt.colorbar(format = '%+2.0f dB')
plt.show()

real_chroma = librosa.feature.chroma_cqt(y=real_ad, sr = real_st, bins_per_octave = 36)
plt.figure(figsize = (12,4))
librosa.display.specshow(real_chroma, sr = real_sr, x_axis = 'time' , y_axis = 'chrom', vmin = 0 , vmax = 1)
plt.colorbar(format = '%+2.0f dB')
plt.title('Real Audio Chroma')
plt.show()

real_mfcc = librosa.feature.mfcc(y = real_ad, sr = real_sr)
plt.figure(figsize = 12,4)
librosa.display.specshow(real_mfcc, sr = real_st, x_axis = 'time')
plt.colorbar()
plt.title('Real Auduio MFCC')
plt.show()

fake_ad, fake_sr = librosa.load(fake_audio)
plt.figure(figsize =(12,4))
plt.plot(fake_ad)
plt.title("Fake Audio Data")
plt.show()

fake_spec = np.abs(librosa.stft(fake_ad))
fake_spec = librosa.amplitude_to_db(fake_spec, ref = np.max)
plt.figure(figsize=(12,4))
librosa.display.specshow(fake_spec, sr = fake_sr, x_axis = 'time', y_axis = 'log')
plt.colorbar(format = '%+2.0f dB')
plt.title("Real Fake Spectogram")
plt.show()

fake_mel_spect = librosa.feature.melspectrogram(y = fake_ad, sr = fake_sr)
fake_mel_spect = librosa.power_to_db(fake_mel_spect, ref = np.max)
plt.figure(figsize = (14,5))
librosa.display.specshow(fake_mel_spect, y_axis ='mel', x_axis = 'time')
plt.title('Fake Audio Mel Spectogram')
plt.colorbar(format = '%+2.0f dB')
plt.show()

fake_chroma = librosa.feature.chroma_cqt(y = fake_ad, sr = fake_sr, bins_per_octave=36)
plt.figure(figsize=(14,5))
librosa.display.specshow(fake_chroma, sr = fake_sr, x_axis= 'time', y_axis = 'chroma', vmin = 0, vmax = 1)
plt.colorbar()
plt.title('Fake Audio Chromagram')
plt.show()

fake_mfcc = librosa.feature.mfcc(y = fake_ad, sr = fake_sr)
plt.figure(figsize = (14,5))
librosa.display.specshow(fake_mfcc, sr = fake_sr, x_axis ='time')
plt.colorbar()
plt.title('Fake Audio Mel-Frequency Cepstral Ceofficients (MFCCS)')
plt.show()